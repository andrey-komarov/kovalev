<<<<<<< HEAD
# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 2.8

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canoncical targets will work.
.SUFFIXES:

# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/andrey/svn/kovalev/trunk

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/andrey/svn/kovalev/trunk

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running interactive CMake command-line interface..."
	/usr/bin/cmake -i .
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/andrey/svn/kovalev/trunk/CMakeFiles /home/andrey/svn/kovalev/trunk/CMakeFiles/progress.marks
	$(MAKE) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/andrey/svn/kovalev/trunk/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named intersection

# Build rule for target.
intersection: cmake_check_build_system
	$(MAKE) -f CMakeFiles/Makefile2 intersection
.PHONY : intersection

# fast build rule for target.
intersection/fast:
	$(MAKE) -f src/CMakeFiles/intersection.dir/build.make src/CMakeFiles/intersection.dir/build
.PHONY : intersection/fast

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... intersection"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system
=======
#############################################################################
# Makefile for building: trunk
# Generated by qmake (2.01a) (Qt 4.7.4) on: ?? ???. 18 04:28:08 2011
# Project:  trunk.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile trunk.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -DRELEASE
CFLAGS        = -pipe -O3 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O3 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = geom/point/point.cpp \
		main.cpp \
		big_int/big_int/big_int.cpp \
		big_int/container/container.cpp \
		fraction/fraction.cpp \
		geom/segment/segment.cpp \
		geom/exact/expansion/expansion.cpp \
		geom/predicates/predicates.cpp \
		geom/point/exact_point.cpp \
		../enum.cpp 
OBJECTS       = point.o \
		main.o \
		big_int.o \
		container.o \
		fraction.o \
		segment.o \
		expansion.o \
		predicates.o \
		exact_point.o \
		enum.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		trunk.pro
QMAKE_TARGET  = trunk
DESTDIR       = 
TARGET        = trunk

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: trunk.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile trunk.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile trunk.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/trunk1.0.0 || $(MKDIR) .tmp/trunk1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/trunk1.0.0/ && $(COPY_FILE) --parents geom/point/point.h geom/point/simple_point.h geom/enum.h geom/point.h big_int/big_int/big_int.h big_int/container/container.h big_int/big_int.h fraction/fraction.h geom/errors.h geom/traits/supertype.h geom/utils/utils.h geom/utils.h geom/segment.h geom/segment/segment.h geom/predicates/predicates.h geom/predicates.h geom/traits/exact.h geom/exact/expansion/expansion.h geom/point/exact_point.h .tmp/trunk1.0.0/ && $(COPY_FILE) --parents geom/point/point.cpp main.cpp big_int/big_int/big_int.cpp big_int/container/container.cpp fraction/fraction.cpp geom/segment/segment.cpp geom/exact/expansion/expansion.cpp geom/predicates/predicates.cpp geom/point/exact_point.cpp ../enum.cpp .tmp/trunk1.0.0/ && (cd `dirname .tmp/trunk1.0.0` && $(TAR) trunk1.0.0.tar trunk1.0.0 && $(COMPRESS) trunk1.0.0.tar) && $(MOVE) `dirname .tmp/trunk1.0.0`/trunk1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/trunk1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

point.o: geom/point/point.cpp geom/point.h \
		geom/point/point.h \
		geom/errors.h \
		geom/utils.h \
		geom/utils/utils.h \
		geom/enum.h \
		geom/point/simple_point.h \
		geom/point/exact_point.h \
		geom/exact/expansion/expansion.h \
		fraction/fraction.h \
		big_int/big_int.h \
		big_int/big_int/big_int.h \
		big_int/container/container.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o point.o geom/point/point.cpp

main.o: main.cpp geom/point.h \
		geom/point/point.h \
		geom/errors.h \
		geom/utils.h \
		geom/utils/utils.h \
		geom/enum.h \
		geom/point/simple_point.h \
		geom/point/exact_point.h \
		geom/exact/expansion/expansion.h \
		fraction/fraction.h \
		big_int/big_int.h \
		big_int/big_int/big_int.h \
		big_int/container/container.h \
		geom/segment.h \
		geom/segment/segment.h \
		geom/predicates.h \
		geom/predicates/predicates.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

big_int.o: big_int/big_int/big_int.cpp big_int/big_int.h \
		big_int/big_int/big_int.h \
		big_int/container/container.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o big_int.o big_int/big_int/big_int.cpp

container.o: big_int/container/container.cpp big_int/container/container.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o container.o big_int/container/container.cpp

fraction.o: fraction/fraction.cpp fraction/fraction.h \
		big_int/big_int.h \
		big_int/big_int/big_int.h \
		big_int/container/container.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fraction.o fraction/fraction.cpp

segment.o: geom/segment/segment.cpp geom/segment.h \
		geom/segment/segment.h \
		geom/point.h \
		geom/point/point.h \
		geom/errors.h \
		geom/utils.h \
		geom/utils/utils.h \
		geom/enum.h \
		geom/point/simple_point.h \
		geom/point/exact_point.h \
		geom/exact/expansion/expansion.h \
		fraction/fraction.h \
		big_int/big_int.h \
		big_int/big_int/big_int.h \
		big_int/container/container.h \
		geom/predicates.h \
		geom/predicates/predicates.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o segment.o geom/segment/segment.cpp

expansion.o: geom/exact/expansion/expansion.cpp geom/exact/expansion/expansion.h \
		geom/enum.h \
		geom/utils.h \
		geom/utils/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o expansion.o geom/exact/expansion/expansion.cpp

predicates.o: geom/predicates/predicates.cpp geom/predicates.h \
		geom/predicates/predicates.h \
		geom/enum.h \
		geom/point.h \
		geom/point/point.h \
		geom/errors.h \
		geom/utils.h \
		geom/utils/utils.h \
		geom/point/simple_point.h \
		geom/point/exact_point.h \
		geom/exact/expansion/expansion.h \
		fraction/fraction.h \
		big_int/big_int.h \
		big_int/big_int/big_int.h \
		big_int/container/container.h \
		geom/traits/exact.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o predicates.o geom/predicates/predicates.cpp

exact_point.o: geom/point/exact_point.cpp geom/point/exact_point.h \
		geom/enum.h \
		geom/errors.h \
		geom/point/simple_point.h \
		geom/exact/expansion/expansion.h \
		geom/utils.h \
		geom/utils/utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o exact_point.o geom/point/exact_point.cpp

enum.o: ../enum.cpp geom/enum.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o enum.o ../enum.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:
>>>>>>> 4f15f18... comparing two exact points fix

